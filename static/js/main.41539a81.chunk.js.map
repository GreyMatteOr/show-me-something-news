{"version":3,"sources":["images/loading.png","images/newspaper.png","Components/NewsCard/NewsCard.js","api-requests.js","Components/NewsFeed/NewsFeed.js","Components/App/App.js","index.js"],"names":["NewsCard","article","to","web_url","className","data-testid","image","multimedia","find","media","type","width","src","undefined","newspaper","url","alt","headline","main","makeImage","byline","original","Date","pub_date","toDateString","summary","abstract","length","lead_paragraph","type_of_material","getBestSummary","wordAPI","getRandomWord","fetch","method","headers","then","response","ok","json","getPhrase","numWords","data","words","randomI","Math","floor","random","newData","concat","parseValues","push","slice","Array","isArray","reduce","output","element","Object","entries","forEach","entry","split","filter","word","includes","timesAPI","key","getArticles","query","page","sort","NewsFeed","props","NewsCards","articles","unique","every","inside","map","i","state","currentPage","this","isError","next","queryChange","pageChange","sortChange","setAppState","loadingOverlayState","setState","isLoading","docs","pageMax","min","ceil","meta","hits","catch","Component","App","About","disp","onClick","showAbout","href","createSelect","propName","displayText","btnData","btnHTML","id","text","options","optionsHTML","option","value","name","onChange","e","target","getNewPhrase","join","setSort","mightSortBy","Header","preferencesClass","showPreferences","Home","OffsetPage","match","params","pageNum","PageSelect","numPhrases","sortBy","loading","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41539a81.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.b33cf617.png\";","export default __webpack_public_path__ + \"static/media/newspaper.15485f19.png\";","import { Link } from 'react-router-dom';\nimport newspaper from '../../images/newspaper.png';\nimport PropTypes from 'prop-types';\nimport './NewsCard.css';\n\nfunction NewsCard({ article } ) {\n\n  function makeImage() {\n    let image = article.multimedia.find( media => media.type === 'image' && media.width >= 160);\n    let src = 'https://www.nytimes.com/';\n    if (image === undefined) src = newspaper;\n    else src += image.url\n    return (\n      <img\n        data-testid='nc-image'\n        src={src}\n        alt={`\"${article.headline.main}\"`}\n      />\n    )\n  }\n\n  function getBestSummary() {\n    let summary = (article.abstract.length > article.lead_paragraph.length\n      ? article.abstract\n      : article.lead_paragraph\n    );\n    if (summary.length === 0) summary = `${article.type_of_material}: ${article.headline.main}`;\n    return summary;\n  }\n\n\n  return (\n    <Link to={article.web_url}\n      className='news-card'\n      data-testid='news-card'>\n      {makeImage()}\n      <section className='article-text'>\n        <h2\n          className='nc-title'>\n          {article.headline.main}\n        </h2>\n        <h4>{article.byline.original}</h4>\n        <h4>\n          Published: <time>{new Date(article.pub_date).toDateString()}</time>\n        </h4>\n        <p data-testid='nc-summary'>{getBestSummary()}</p>\n      </section>\n    </Link>\n  )\n}\n\nNewsCard.propTypes = {\n  article: PropTypes.object\n}\n\nexport default NewsCard;\n","export const wordAPI = {\n  url: 'https://wordsapiv1.p.rapidapi.com/words/',\n\n  getRandomWord() {\n    return fetch(wordAPI.url + '?random=true', {\n      method: 'GET',\n      headers: {\n        \"x-rapidapi-key\": \"7db29738cbmsh471ad5d986747b7p1cb45ajsnfd84ea900f54\",\n        \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\"\n      }\n    })\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return 'error';\n      }\n    });\n  },\n\n  async getPhrase(numWords, data = []) {\n    let words = [];\n    while (words.length < numWords) {\n      let randomI = Math.floor( Math.random() * 10);\n      while (data.length <= randomI) {\n        let newData = await wordAPI.getRandomWord();\n        if (newData === 'error') return 'error';\n        data = data.concat( wordAPI.parseValues(newData) );\n      }\n      words.push( data[randomI] );\n      data = data.slice(randomI + 1);\n    }\n    return words;\n  },\n\n  parseValues(data, type = typeof(data)) {\n\n    if(data === undefined || data === null) return [];\n\n    if (Array.isArray(data)) {\n      return data.reduce( (output, element) => {\n        return output.concat( wordAPI.parseValues(element) )\n      }, []);\n    }\n\n    if (type === 'object') {\n      let output = [];\n      Object.entries(data).forEach( entry => {\n        if (entry[0] !== 'pronunciation') output = output.concat(wordAPI.parseValues(entry[1]))\n      });\n      return output;\n    }\n\n    if (type === 'string') {\n      return data.split(' ')\n      .filter(word => {\n        let tooShort = word.length <= 3;\n        let isForbidden = [\n          'adjective',\n          'adverb',\n          'article',\n          'conjunction',\n          'determiner',\n          'interjection',\n          'noun',\n          'preposition',\n          'pronoun',\n          'verb'\n        ];\n        return !tooShort && !isForbidden.includes(word);\n      });\n    }\n    return [];\n  }\n}\n\nexport const timesAPI = {\n  url: 'https://api.nytimes.com/svc/search/v2/articlesearch.json?',\n\n  key: '&api-key=L5x1jxc7BGK5GdsesCTan33ncRlP52P6',\n\n  getArticles(query, page = 0, sort = 'relevance') {\n    return fetch(timesAPI.url + `q=${query}` + timesAPI.key + `&page=${page}` + `&sort=${sort}`)\n    .then( response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return 'error';\n      }\n    });\n  }\n}\n","import NewsCard from '../NewsCard/NewsCard.js';\nimport './NewsFeed.css';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {timesAPI} from '../../api-requests.js';\n\n\nclass NewsFeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n      currentPage: this.props.currentPage\n    }\n  }\n\n  componentDidMount() {\n    if (!this.props.isError) {\n      this.getArticles(this.props.query, this.props.currentPage, this.props.sort)\n    }\n  }\n\n  componentWillReceiveProps(next) {\n    let queryChange = next.query !== this.props.query;\n    let pageChange = next.currentPage !== this.props.currentPage;\n    let sortChange = next.sort !== this.props.sort;\n    let valid = !this.props.isError;\n    if ( valid && (queryChange || pageChange || sortChange) ) {\n      this.getArticles(next.query, next.currentPage, next.sort);\n    }\n  }\n\n  getArticles(query, page, sort) {\n    this.props.setAppState( {loadingOverlayState: 'shown'} )\n    timesAPI.getArticles(query, page - 1, sort)\n    .then( data => {\n      if (data === 'error') {\n        return this.setState( {isError: true, isLoading: false, loadingOverlayState: 'hidden'} )\n      }\n      this.setState( {articles: data.response.docs || [null]} )\n      this.props.setAppState( {\n        isError: false,\n        isLoading: false,\n        loadingOverlayState: 'hidden',\n        pageMax: Math.min( Math.ceil(data.response.meta.hits / 10), 100)\n      } )\n    })\n    .catch( () => {\n      this.props.setAppState( {isError: true, isLoading: false, loadingOverlayState: 'hidden'} )\n    })\n  }\n\n  NewsCards = (props) => {\n    let uniqueArticles = props.articles.reduce( (unique, article ) => {\n      let isNew = unique.every( inside => inside.web_url !== article.web_url );\n      if (isNew) unique.push(article);\n      return unique;\n    }, []);\n\n    return uniqueArticles.map( (article, i) => {\n      return <NewsCard key={i} article={article} />\n    });\n  }\n\n  render() {\n    if (this.props.isError) {\n      return <h3>Looks like something went wrong! Refresh the page to try again.</h3>\n    }\n\n    if (this.state.articles[0] === null) {\n      return <h3>Looks like '{this.props.query}' didn't turn up any results. Hit the 'Show Me Something News' button to try again. Increasing the number of words to generate may also help!</h3>\n    }\n\n    return <this.NewsCards articles={this.state.articles}/>\n  }\n}\n\nNewsFeed.propTypes = {\n  currentPage: PropTypes.number,\n  inError: PropTypes.bool,\n  query: PropTypes.string,\n  setAppState: PropTypes.func,\n  sort: PropTypes.string\n}\n\nexport default NewsFeed;\n","import './App.css';\nimport loading from '../../images/loading.png';\nimport NewsFeed from '../NewsFeed/NewsFeed.js';\nimport React, { Component } from 'react';\nimport { NavLink, Route} from 'react-router-dom';\nimport {wordAPI} from '../../api-requests.js';\n\nclass App extends Component {\n  constructor(props) {\n    super (props);\n    this.state = {\n      numPhrases: 1,\n      isError: false,\n      isLoading: true,\n      loadingOverlayState: 'shown',\n      mightSortBy: 'relevance',\n      numWords: 1,\n      pageMax: 1,\n      query: null,\n      showAbout: false,\n      showPreferences: false,\n      sortBy: 'relevance'\n    }\n  }\n\n  componentDidMount() {\n    this.getNewPhrase();\n  }\n\n  About = (props) => {\n    return (\n      <div\n        className={props.disp}\n        onClick={ () => this.setState( {showAbout: !this.state.showAbout} ) }>\n        <div className='about-holder'>\n          <h4 className='about-text'>About Show Me Something News</h4>\n          <p className='about-text'>\n            Many people these days are concerned about how they are served the media they are consuming. There are algorithms in charge of curating content on most of the popular social media sites. On the surface, this doesn't seem terrible. However, it has recently come to light that there are some terrible repurcussions to the current way mass-media is provided. To those that would experiment with a life outside of intentional media seeking you out, Show Me Something News is a means of accessing high-quality articles from the New York Times but for randomly-generated topics.\n          </p>\n          <p className='about-text'>\n            By default, a single random word is generated at random. From there, articles about this topic are fetched and displayed. Single-word queries typically provide a smaller, but more focused and predictable result. To increase complexity, merely increase the number of search-terms in the preferences. The phrase will not be completely random, as the words will be moderately related.\n          </p>\n          <p className='about-text'>\n            The words are generated using <a href='https://www.wordsapi.com'>WORDSAPI</a> and <a href='https://developers.nytimes.com'>NYTAPI</a>. If you're curious about the developer, please check out <a href='https://github.com/greymatteor'>my GitHub profile</a>.\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  createSelect = (propName, displayText, btnData, ...options) => {\n    let btnHTML = <></>;\n    if (btnData) {\n      btnHTML = <button id='select-btn' onClick={btnData.onClick}>{btnData.text}</button>\n    }\n    let optionsHTML = options.map( (option, i) => <option key={i} value={option}>{option}</option>)\n    return (\n      <div className='preferences-select'>\n        {displayText}\n        {btnHTML}\n        <select\n          name={propName}\n          onChange={(e) => this.setState({[e.target.name]: e.target.value})}>\n          {optionsHTML}\n        </select>\n      </div>\n    )\n  }\n\n  getNewPhrase = () => {\n    wordAPI.getPhrase(this.state.numWords)\n    .then( words => {\n      if (words === 'error') {\n        return this.setState( {isError: true, isLoading: false} )\n      }\n      this.setState( {query: words.join(' '), currentPage: 1, isLoading: false} )\n    })\n    .catch( () => this.setState( {isError: true, isLoading: false} ))\n  }\n\n  setSort = () => {\n    this.setState({sort: this.state.mightSortBy});\n  }\n\n  Header = () => {\n    let preferencesClass = this.state.showPreferences ? 'search-preferences' : 'search-preferences hidden'\n    return (\n      <header\n        data-testid='header'>\n        <button\n          id='title-btn'\n          onClick={this.getNewPhrase}>\n          <h1>\n            Show Me Something News\n          </h1>\n        </button>\n        <h2>{`...about: \"${this.state.query}`}\"</h2>\n        <section className='header-right'>\n          <div className={preferencesClass}>\n            {this.createSelect('numWords', 'words per phrase', null, 1, 2, 3, 4, 5)}\n          </div>\n          <div id='header-right-btns'>\n            <button\n              className='hr-btn'\n              onClick={ () => this.setState({ showPreferences: !this.state.showPreferences })}\n              >\n              adjust preferences\n            </button>\n            <button className='hr-btn' onClick={ () => this.setState( {showAbout: !this.state.showAbout} ) }>about</button>\n          </div>\n        </section>\n      </header>\n    )\n  }\n\n  Home = () => {\n    return (\n      <NewsFeed\n        currentPage={1}\n        isError={this.state.isError}\n        query={this.state.query}\n        setAppState={this.setAppState}\n        sort={this.state.sort}\n      />\n    );\n  }\n\n  OffsetPage = (props) => {\n    return (\n      <NewsFeed\n        currentPage={+props.match.params.pageNum}\n        isError={this.state.isError}\n        query={this.state.query}\n        setAppState={this.setAppState}\n        sort={this.state.sort}\n      />\n    )\n  }\n\n  PageSelect = (props) => {\n    let optionsHTML = [];\n    while (optionsHTML.length < props.pageMax) {\n      let pageNum = optionsHTML.length + 1;\n      optionsHTML.push(\n        <NavLink\n          to={`/page/${pageNum}`}\n          key={pageNum}>\n          <button>\n            {pageNum}\n          </button>\n        </NavLink>\n      )\n    }\n\n    return (\n      <div className='page-selection'>\n          {optionsHTML}\n      </div>\n    )\n  }\n\n  setAppState = (state) => {\n    this.setState(state);\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div className='on-load-spin'>\n          <img\n            className='spin'\n            src={loading}\n            alt='Loading Content'\n          />\n        </div>\n      )\n    }\n\n    let btnData = {text:'Sort By', onClick: this.setSort};\n    let showAbout = this.state.showAbout ? 'about-show' : '';\n    return (\n      <>\n        <this.Header />\n        <this.About disp={`about-overlay ${showAbout}`} />\n        <main>\n          {this.createSelect('mightSortBy', null, btnData, 'relevance', 'newest', 'oldest')}\n          <this.PageSelect pageMax={this.state.pageMax}/>\n          <div className={this.state.loadingOverlayState}>\n            <img\n              className='spin'\n              src={loading}\n              alt='Loading Content'\n            />\n          </div>\n\n          <Route\n            exact path='/'\n            component={this.Home}\n          />\n\n          <Route\n            exact path='/page/:pageNum'\n            component={this.OffsetPage}\n          />\n\n          <Route\n            path='/about'\n            component={this.About}\n          />\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import App from './Components/App/App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}